<html>
  <head>
    <script>
    /*
    - 
    - 
    - 
    */    
    //**********************************************
    //*** ON LOAD INITS
    //**********************************************  
    var nums=['0','1','2','3','4','5','6','7','8','9'];
    var isRepeatQuestion = false;
    var wrongAnswers = [];
    var expectedNum = [0, 0];
    var timeCount = 0;
    var numberCorrect = 0;
    var START_TIME = 1;
        
    var callback = function(){
      odometerOptions = { auto: false };
      // Handler when the DOM is fully loaded
      document.getElementById("entry").focus();
      document.getElementById('entry').className='nilBorder';
      highScoreData = localStorage.getItem('HighScores');
      totalOd = new Odometer({ el: document.getElementById("total"), format: '(ddd)', theme: 'digital', animation: 'count' });
      totalOd.value = '#000';
      totalOd.render();

      secondsOd = new Odometer({ el: document.getElementById("seconds1"), format: '(dd:dd)', theme: 'digital', animation: 'count' });
      secondsOd.value = 'T-0000';
      secondsOd.render();

      updateStartTime();     
    };

    if (document.readyState === "complete" ||
      (document.readyState !== "loading" && !document.documentElement.doScroll)) {
        callback();
    } 
    else {
        document.addEventListener("DOMContentLoaded", callback);
    }

    function updateStartTime(){

      START_TIME = document.getElementById("time").value;
      
      if (START_TIME == '.5'){
        START_TIME = 0;           
        secondsOd.value = 'T-0030';
        secondsOd.render();   

      }
      else {
        START_TIME = parseInt(START_TIME);
        if (START_TIME < 10){
          secondsOd.value = 'T-0'+START_TIME+'00';
          secondsOd.render();

        } else {
          secondsOd.value = 'T-'+START_TIME+'00';
          secondsOd.render();

        }
      }
    }
    
    // *********************************************
    // *** ADD FACTOR I.E. INCLUDES DIGIT IN QUESTION BUILDING ASSIGNMENT
    // *********************************************
    function addfactor(box){
      if(box.checked){
        nums[nums.length]=box.value;
      }else{
        var nums1 = [];
        for(var i=0; i < nums.length; i++){
          if (nums[i] != box.value){
            nums1[nums1.length] = nums[i];
          } 
        }
        nums=nums1;
      }    
      return false;
    }

    // *********************************************
    // *** QUESTION BUILDER
    // *********************************************
    function question(){
            
      var hasWrongs = (wrongAnswers.length > 0 &&
                      wrongAnswerItem < wrongAnswers.length);
      
      var x = 0;
      var y = 0;
      isRepeatQuestion = false;
      var emph = '';
      if (hasWrongs){
        
        x =  wrongAnswers[wrongAnswerItem][0];
        y = wrongAnswers[wrongAnswerItem][1];
        if (expectedNum[0] != x && expectedNum[1] != y){
          isRepeatQuestion = true;
          wrongAnswerItem++;  
          //emph = '(x'+wrongAnswerItem+')';
        }
      }
      
      if (!isRepeatQuestion){
        
        y = Math.round(Math.random()*10);
        while (y == expectedNum[1]){
          y = Math.round(Math.random()*10);
        } 
        var rand = Math.random();
        var howManyToChooseFrom = nums.length;      
        var numx = Math.round(rand * howManyToChooseFrom);      
      
        if (numx == nums.length) numx -= 1;
        x =  nums[numx];
      }      
      
      expectedNum = [x, y];
      document.getElementById("text").innerText = emph + x + ' x ' + y + ' =';
      return false;
    }
      
    // *********************************************************
    // *** RESET SETS THE STATE OF QUIZ BACK TO INITS
    // *********************************************************
    function reset(){
      
      wrongAnswerItem = 0;
      wrongAnswers = [];
      expectedNum = [0, 0];
      numberCorrect = 0;    
      document.getElementById('stb').disabled='true';
      document.getElementById('time').disabled='true';
      document.getElementById('entry').className='nilBorder';

      timeCount = 60;
      if (START_TIME == 0){
        timeCount = 30;               
      }
      START_TIME--;
      
      document.getElementById("entry").disabled='';
      document.getElementById("entry").focus();
      totalOd.value = '#000';
      totalOd.render();
      
      setTimeout(updateSeconds, 1000);
      return question();
    }

    // **********************************************************
    // *** HIGH SCORE READOUT BUILDS AND UPDATES HIGH SCORES INFO
    // **********************************************************
    function highScoreReadout(){
      
      var newScoreData = [];
      
      if (highScoreData != null){
                
        var i = 0;
        var tempHighScoreSpot = -1;
        var highScoreSplit = highScoreData.split(',');
        while (i < highScoreSplit.length){
          
          if (parseInt(highScoreSplit[i]) <= numberCorrect){
            if (tempHighScoreSpot == -1){
              newScoreData[newScoreData.length] = numberCorrect;
              tempHighScoreSpot = i + 1; 
            }
          }

          if (newScoreData.length >= 10) break;

          i++;       
          newScoreData[newScoreData.length] = highScoreSplit[i-1];
          
        }
      
        highScoreData = newScoreData.join();
        
        if (tempHighScoreSpot > -1){
          alert('New high score #' + tempHighScoreSpot + '. ' + numberCorrect + ' correct answers!');
        }
        
      }
      else{
                
        newScoreData[0] = numberCorrect;
        highScoreData = newScoreData.join();      
        alert('New high score of ' + numberCorrect + ' correct answers!');
        
      }
      localStorage.setItem('HighScores', highScoreData);
      
      document.getElementById('stb').disabled='';
      document.getElementById('time').disabled='';
      updateStartTime();
      
    }
      
    // **************************************************************
    // *** UPDATE SECONDS HANDLES WHEN DISPLAY CHANGES ARE MADE PER SECOND
    // **************************************************************
    function updateSeconds(){
      
      timeCount--;
      var minutes = START_TIME;
      if (START_TIME < 10)
        minutes = '0' + START_TIME;
      var seconds = timeCount;
      if (timeCount < 10)
        seconds = '0' + timeCount;
      //document.getElementById("seconds1").innerHtml = 'T-'+minutes+':'+seconds;
      secondsOd.value = 'T-'+minutes+''+seconds;
      secondsOd.render();

      if (timeCount == 0){
        if (START_TIME >= 1){
          timeCount = 60;
          START_TIME--;
        } else {
          document.getElementById("entry").disabled='true';          
          setTimeout(highScoreReadout, 2000);
          return;
        }
      }
            
      setTimeout(updateSeconds, 1000);  
      
    }
    
    // *************************************************************
    // *** ANSWER EVALUATION OF ANSWER GIVEN AND DISPLAY CHANGES
    // *************************************************************
    function answer(e) {       
      
      var txtEntry = document.getElementById("entry").value;
      
      if (txtEntry.trim().length == 0){
        
        if (document.getElementById("text").innerText.length == 0){
          reset();
        }
        
        e.preventDefault();  
        return;
      }

      var entry = parseInt(txtEntry);
      
      if (entry == (expectedNum[0] * expectedNum[1])){
        
        numberCorrect++;
        var paddedTotal = '00'+numberCorrect;        
        totalOd.value = '#'+paddedTotal.slice(paddedTotal.length - 3, paddedTotal.length);
        totalOd.render();
        document.getElementById("entry").className='correct';                        
      }
      else{ 
        
        if (!isRepeatQuestion){
          
          wrongAnswers[wrongAnswers.length] = [expectedNum[0], expectedNum[1]];
          wrongAnswers[wrongAnswers.length] = [expectedNum[0], expectedNum[1]]; 
        } 
                
        document.getElementById("entry").className='incorrect';        
      }
            
      document.getElementById("entry").value='';
      document.getElementById("entry").focus();
      question();
            
      e.preventDefault();  
      return;
    }
    </script>
    <style>
      
      .correct{
        border: dotted green 5px; 
      }
      .incorrect{
        border: dotted red 5px;
      }

      .nilBorder{
        outline: none !important;
        border:none;        
      }
      
      .odometer {
        font-size: 100px;  
        float:left; 
      }

      .parent {
        float: right;
        clear:both;
        position: relative;
        left: -50%; /* or right 50% */
        text-align: left;
        margin: 5px;
      }
      .parent > .child {
        position: relative;
        left: 50%;
      }

      #entry{
        font-family: times;
        color: #444;
        margin: 0;
        padding: 0px 0px 6px 0px;
        font-size: 100px;
        letter-spacing: -2px;
        font-weight: bold;
        vertical-align: middle;
        text-align: center;
        float:left;
      }

      .button {
        background-color: #4CAF50; /* Green */
        border: none;
        color: white;
        padding: 15px 32px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin: 5px;
      }  

      .lgTxt{
        font-family: times;
        color: #444;
        margin: 0;
        padding: 0px 0px 6px 0px;
        font-size: 100px;
        letter-spacing: -2px;
        font-weight: bold;
        vertical-align: middle;
      }
    </style>
    <link rel="stylesheet" href="http://github.hubspot.com/odometer/themes/odometer-theme-digital.css" />
    <script src="http://github.hubspot.com/odometer/odometer.js"></script>
</head>
<body>  

  <div style="text-align:center;">
  <input type="checkbox" value="0" onclick="addfactor(this);" checked=checked/>0&nbsp;
  <input type="checkbox" value="1" onclick="addfactor(this);" checked=checked/>1&nbsp;
  <input type="checkbox" value="2" onclick="addfactor(this);" checked=checked/>2&nbsp;
  <input type="checkbox" value="3" onclick="addfactor(this);" checked=checked/>3&nbsp;
  <input type="checkbox" value="4" onclick="addfactor(this);" checked=checked/>4&nbsp;
  <input type="checkbox" value="5" onclick="addfactor(this);" checked=checked/>5&nbsp;
  <input type="checkbox" value="6" onclick="addfactor(this);" checked=checked/>6&nbsp;
  <input type="checkbox" value="7" onclick="addfactor(this);" checked=checked/>7&nbsp;
  <input type="checkbox" value="8" onclick="addfactor(this);" checked=checked/>8&nbsp;
  <input type="checkbox" value="9" onclick="addfactor(this);" checked=checked/>9&nbsp;
  <select id="time" onchange="updateStartTime();">
    <option value=".5">
      30 seconds
    </option>
    <option value="1">
      1 minute
    </option>
    <option value="2">
      2 minute
    </option>
    <option value="3">
      3 minute
    </option>
    <option value="5">
      5 minute
    </option>
    <option value="10">
      10 minute
    </option>
    <option value="15" selected>
      15 minute
    </option>
    <option value="20">
      20 minute
    </option>
  </select>
  <input type="button" value="START" onclick="reset();" class="button" id="stb"/>
  </div>
  <div class="parent">
  <div class="child">
    <div class="odometer" id="total"></div>
  </div></div>

  <div class="parent">
  <div class="child">    
    <div class="odometer" id="seconds1"></div>
  </div></div>

  <div class="parent">
  <div class="child">
  <form id="frmMult" onsubmit="return answer(event);" autocomplete="off">
    
      <div id="text" class="lgTxt" style="float:left;"></div><input type="textbox" maxlength="3" size="4" id="entry" autocomplete="off" name="entry_101038830"/>
    
    <input type="submit" value="Check" style="visibility:hidden;"/>
  </form>
  </div></div>
</body>
</html>
